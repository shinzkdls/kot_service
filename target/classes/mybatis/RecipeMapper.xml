<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kbstar.mapper.RecipeMapper">
    <insert id="insert" parameterType="recipebasic">
        INSERT INTO recipe_basic
        VALUES (recipe_basic_seq.NEXTVAL,
                #{custpin},
                #{custid},
                #{nickname},
                #{type},
                #{situation},
                #{ingredients1},
                #{ingredients2},
                #{ingredients3},
                #{cooking},
                recipe_basic_seq.CURRVAL || '_thumb.jpg',
                recipe_basic_seq.CURRVAL || '_fin.jpg',
                #{time},
                #{recipelevel},
                #{recipetitle},
                #{recipedesc},
                SYSDATE,
                0)
    </insert>
    <select id="pingetter" resultType="Integer">
        SELECT recipe_basic_SEQ.CURRVAL
        FROM dual
    </select>
    <delete id="delete" parameterType="Integer">
        DELETE
        FROM recipe_basic
        WHERE recipepin = #{recipepin}
    </delete>
    <select id="getpage" parameterType="RecipeBasic" resultType="RecipeBasic">
        SELECT R.*,
        NVL2(G.custpin,'1','0') as logincustlike
        FROM Recipe_Basic R
        LEFT OUTER JOIN GoodList G
        ON R.recipepin = G.recipepin
        AND G.custpin = #{logincustpin}
        WHERE 1=1
        <if test="ingredients1 != ''">
            AND R.ingredients1 LIKE '%' || #{ingredients1} || '%'
        </if>
        <if test="type != ''">
            AND R.type LIKE '%' || #{type} || '%'
        </if>
        <if test="recipelevel != ''">
            AND R.recipelevel LIKE '%' || #{recipelevel} || '%'
        </if>
        <if test="recipetitle != ''">
            AND R.recipetitle LIKE '%' || #{recipetitle} || '%'
        </if>
        <if test="sort == 0">
            ORDER BY R.recipepin DESC
        </if>
        <if test="sort == 1">
            ORDER BY R.time DESC
        </if>
        <if test="sort == 2">
            ORDER BY R.time ASC
        </if>
        <if test="sort == 3">
            ORDER BY R.views DESC
        </if>
        <if test="sort == 4">
            ORDER BY R.views ASC
        </if>
    </select>
    <select id="getsearch" parameterType="String" resultType="recipebasic">
        SELECT *
        FROM recipe_basic
        where recipetitle LIKE '%' || #{recipetitle} || '%'
        ORDER BY recipepin DESC
    </select>
    <select id="select" parameterType="RecipeBasic" resultType="recipebasic">
        SELECT R.*,
               NVL2(G.custpin, '1', '0') as logincustlike
        FROM recipe_basic R
                 LEFT OUTER JOIN goodlist G
                                 ON R.recipepin = G.recipepin
                                     AND G.custpin = #{logincustpin}
        WHERE R.recipepin = #{recipepin}
    </select>
    <select id="selectall" resultType="recipebasic">
        SELECT *
        FROM recipe_basic
    </select>
    <select id="gettype" parameterType="String" resultType="recipebasic">
        SELECT *
        FROM (SELECT *
              FROM recipe_basic
              WHERE situation = '1') AS subtable
        WHERE type = #{type}
        ORDER BY recipepin DESC
    </select>
    <select id="getsituation" parameterType="String" resultType="recipebasic">
        SELECT *
        FROM recipe_basic
        WHERE situation = #{situation}
        ORDER BY recipepin DESC
    </select>

    <!--            이나은-->
    <select id="ranking" resultType="int">
        <![CDATA[
        SELECT *
        FROM (SELECT RECIPEPIN
              FROM goodlist
              GROUP BY RECIPEPIN
              ORDER BY COUNT(RECIPEPIN) DESC)
        WHERE ROWNUM < 6
        ]]>
    </select>
    <select id="latestRecipe" resultType="RecipeBasic">
    <![CDATA[
        SELECT A.*, NVL(B.GOODCOUNT, 0) AS GOODCOUNT
        FROM (SELECT *
              FROM recipe_basic
              ORDER BY RECIPEDATE DESC) A
                 LEFT OUTER JOIN (SELECT RECIPEPIN, COUNT(*) AS GOODCOUNT
                                  FROM GOODLIST
                                  GROUP BY RECIPEPIN) B
                                 ON A.RECIPEPIN = B.RECIPEPIN
        WHERE ROWNUM <= 6
        ]]>
    </select>
    <select id="subscribeRecipe" parameterType="Integer" resultType="RecipeBasic">
    <![CDATA[
        SELECT *
        FROM recipe_basic
        WHERE custpin IN (SELECT subcustpin FROM subscribe WHERE custpin = #{custpin})
          AND ROWNUM <= 3
        ORDER BY RECIPEDATE DESC
        ]]>
    </select>
    <select id="getMyRecipe" parameterType="String" resultType="recipebasic">
<![CDATA[
        SELECT *
        FROM recipe_basic
        WHERE custid = #{custid}
          AND ROWNUM < 4
        ]]>
    </select>
    <select id="getMyLikeRecipe" parameterType="Integer" resultType="recipebasic">
     <![CDATA[
        SELECT R.*
        FROM recipe_basic R
                 INNER JOIN goodlist G
                            ON R.recipepin = G.recipepin
        WHERE G.custpin = #{custpin}
          AND ROWNUM < 4
        ]]>
    </select>
    <update id="viewup" parameterType="Integer">
        UPDATE RECIPE_BASIC
        SET views = views + 1
        WHERE recipepin = #{recipepin}
    </update>
    <select id="recommendlist" parameterType="RecipeBasic" resultType="RecipeBasic">
        <![CDATA[
        SELECT *
        FROM (SELECT A.*
              FROM RECIPE_BASIC A
                       LEFT OUTER JOIN (SELECT RECIPEPIN,
                                               COUNT(*) AS GOODCOUNT
                                        FROM GOODLIST
                                        WHERE CUSTPIN IN (SELECT CUSTPIN
                                                          FROM GOODLIST
                                                          WHERE RECIPEPIN = #{recipepin})
                                          AND RECIPEPIN != #{recipepin}
                                        GROUP BY RECIPEPIN) B
                                       ON A.RECIPEPIN = B.RECIPEPIN
              WHERE ROWNUM < 6
              ORDER BY NVL(B.GOODCOUNT, 0) DESC, RECIPEDATE DESC)
        ]]>
    </select>
</mapper>