DROP TABLE CUST cascade constraints;
DROP TABLE ADMIN cascade constraints;
DROP TABLE SUBSCRIBE cascade constraints;
DROP TABLE GOODLIST cascade constraints;
DROP TABLE RECIPE_BASIC cascade constraints;
DROP TABLE RECIPE_INGREDIENT cascade constraints;
DROP TABLE RECIPE_STEP cascade constraints;
DROP TABLE RECIPE_COMMENT cascade constraints;
DROP TABLE CLASS_COMMENT cascade constraints;
DROP TABLE CLASS_BASIC cascade constraints;
DROP TABLE PAYMENT cascade constraints;
DROP TABLE CONTACT cascade constraints;
DROP TABLE BAN_TEXT cascade constraints;
DROP TABLE NOTICE cascade constraints;
DROP TABLE CLASS_JOIN_INFO cascade constraints;




CREATE TABLE CUST (
	custpin	INT	NOT NULL,
	custid	VARCHAR2(50)	NOT NULL,
	custname	VARCHAR2(50)	NULL,
	linkedlogin	CHAR(1)	NOT NULL,
	nickname	VARCHAR2(50)	NULL,
	password	VARCHAR2(60)	NOT NULL,
	gender	CHAR(1)	NULL,
	phone	VARCHAR2(15)	NULL,
	email	VARCHAR2(50)	NOT NULL,
	location	VARCHAR2(50)	NULL,
	signdate	DATE	NULL
);


CREATE TABLE ADMIN (
	adminpin	INT	NOT NULL,
	adminid	VARCHAR2(50)	NOT NULL,
	adminname	VARCHAR2(50)	NOT NULL,
	password	VARCHAR2(60)	NOT NULL,
	createdate	DATE	NULL
);


CREATE TABLE SUBSCRIBE (
	custpin	INT	NOT NULL,
	subcustpin	INT	NOT NULL,
	subdate	DATE	NULL
);



CREATE TABLE GOODLIST (
	custpin	INT	NOT NULL,
	recipepin	INT	NOT NULL,
	gooddate	DATE	NULL
);



CREATE TABLE RECIPE_BASIC (
	recipepin	INT	NOT NULL,
	custpin	INT	NOT NULL,
	custid	VARCHAR2(50)	NOT NULL,
	nickname	VARCHAR2(50)	NULL,
	type	VARCHAR2(30)	NOT NULL,
	situation	VARCHAR2(30)	NOT NULL,
	ingredients1	VARCHAR2(30)	NOT NULL,
	ingredients2	VARCHAR2(30)	NOT NULL,
	ingredients3	VARCHAR2(30)	NOT NULL,
	cooking	VARCHAR2(100)	NOT NULL,
	thumbnailimg	VARCHAR2(100)	NOT NULL,
	finishedimg	VARCHAR2(100)	NOT NULL,
	time	INT	NOT NULL,
	recipelevel	CHAR(1)	NOT NULL,
	recipetitle	VARCHAR2(200)	NOT NULL,
	recipedesc	VARCHAR2(500)	NOT NULL,
	recipedate	DATE	NULL
);


CREATE TABLE RECIPE_INGREDIENT (
	ingredientnumber	INT	NOT NULL,
	recipepin	INT	NOT NULL,
	name	VARCHAR(50)	NOT NULL,
	quantity	VARCHAR(50)	NULL
);


CREATE TABLE RECIPE_STEP (
	step	INT	NOT NULL,
	recipepin	INT	NOT NULL,
	stepdesc	VARCHAR2(500)	NOT NULL,
	stepimg	VARCHAR2(100)	NULL
);


CREATE TABLE RECIPE_COMMENT (
	recipecommentpin	INT	NOT NULL,
	recipepin	INT	NOT NULL,
	custpin	INT	NOT NULL,
	custid	VARCHAR2(50)	NOT NULL,
	nickname	VARCHAR2(50)	NULL,
	content	VARCHAR(200)	NOT NULL,
	recipecommentdate	DATE	NULL
);


CREATE TABLE CLASS_BASIC (
	classpin	INT	NOT NULL,
	custpin	INT	NOT NULL,
	custid	VARCHAR2(50)	NOT NULL,
	nickname	VARCHAR2(50)	NULL,
	type	VARCHAR2(30)	NOT NULL,
	location	VARCHAR2(30)	NOT NULL,
	cooking	VARCHAR2(100)	NOT NULL,
	thumbnailimg	VARCHAR2(30)	NOT NULL,
	amount	INT	NOT NULL,
	classtime	INT	NOT NULL,
	personal	INT	NOT NULL,
	classtitle	VARCHAR2(200)	NOT NULL,
	classdesc	VARCHAR2(500)	NOT NULL,
	adderess	VARCHAR2(30)	NULL,
	classdate	DATE	NULL
);


CREATE TABLE CLASS_COMMENT (
	classcommentpin	INT	NOT NULL,
	classpin	INT	NOT NULL,
	custpin	INT	NOT NULL,
	custid	VARCHAR2(50)	NOT NULL,
	nickname	VARCHAR2(50)	NULL,
	content	VARCHAR2(200)	NOT NULL,
	classcommentdate	DATE	NULL
);


CREATE TABLE PAYMENT (
	paymentpin	INT	NOT NULL,
	classpin	INT	NOT NULL,
	custpin	INT	NOT NULL,
	amount	INT	NOT NULL,
	paymentstatus	CHAR(1)	NOT NULL,
	paydate	DATE	NULL
);


CREATE TABLE CONTACT (
	contactpin	INT	NOT NULL,
	custpin	INT	NOT NULL,
	custname	VARCHAR2(50)	NOT NULL,
	email	VARCHAR2(50)	NOT NULL,
	contacttitle	VARCHAR2(100)	NOT NULL,
	contactcontent	VARCHAR2(2000)	NOT NULL,
	contactdate	DATE	NULL,
	answer	CHAR(1)	NOT NULL,
	adminpin	INT	NULL,
	adminid	VARCHAR2(50)	NULL,
	answercontent	VARCHAR2(2000)	NULL,
	answerdate	DATE	NULL
);


CREATE TABLE BAN_TEXT (
	bantextpin	INT	NOT NULL,
	adminpin	INT	NOT NULL,
	adminid	VARCHAR2(50)	NOT NULL,
	status	CHAR(1)	NOT NULL,
	bantextdate	DATE	NULL
);


CREATE TABLE NOTICE (
	noticepin	INT	NOT NULL,
	adminpin	INT	NOT NULL,
	noticetitle	VARCHAR2(100)	NOT NULL,
	noticecontent	VARCHAR2(2000)	NOT NULL,
	noticedate	DATE	NULL
);


CREATE TABLE CLASS_JOIN_INFO (
	classpin	INT	NOT NULL,
	custpin	INT	NOT NULL,
	joinstatus	CHAR(1)	NOT NULL,
	joindate	DATE	NULL
);

ALTER TABLE CUST ADD CONSTRAINT PK_CUST PRIMARY KEY (
	custpin
);

ALTER TABLE ADMIN ADD CONSTRAINT PK_ADMIN PRIMARY KEY (
	adminpin
);

ALTER TABLE SUBSCRIBE ADD CONSTRAINT PK_SUBSCRIBE PRIMARY KEY (
	custpin
);

ALTER TABLE GOODLIST ADD CONSTRAINT PK_GOODLIST PRIMARY KEY (
	custpin,
	recipepin
);

ALTER TABLE RECIPE_BASIC ADD CONSTRAINT PK_RECIPE_BASIC PRIMARY KEY (
	recipepin
);

ALTER TABLE RECIPE_INGREDIENT ADD CONSTRAINT PK_RECIPE_INGREDIENT PRIMARY KEY (
	ingredientnumber,
	recipepin
);

ALTER TABLE RECIPE_STEP ADD CONSTRAINT PK_RECIPE_STEP PRIMARY KEY (
	step,
	recipepin
);

ALTER TABLE RECIPE_COMMENT ADD CONSTRAINT PK_RECIPE_COMMENT PRIMARY KEY (
	recipecommentpin
);

ALTER TABLE CLASS_BASIC ADD CONSTRAINT PK_CLASS_BASIC PRIMARY KEY (
	classpin
);

ALTER TABLE CLASS_COMMENT ADD CONSTRAINT PK_CLASS_COMMENT PRIMARY KEY (
	classcommentpin
);

ALTER TABLE PAYMENT ADD CONSTRAINT PK_PAYMENT PRIMARY KEY (
	paymentpin
);

ALTER TABLE CONTACT ADD CONSTRAINT PK_CONTACT PRIMARY KEY (
	contactpin
);

ALTER TABLE BAN_TEXT ADD CONSTRAINT PK_BAN_TEXT PRIMARY KEY (
	bantextpin
);

ALTER TABLE NOTICE ADD CONSTRAINT PK_NOTICE PRIMARY KEY (
	noticepin
);

ALTER TABLE CLASS_JOIN_INFO ADD CONSTRAINT PK_CLASS_JOIN_INFO PRIMARY KEY (
	classpin,
	custpin
);

ALTER TABLE SUBSCRIBE ADD CONSTRAINT FK_CUST_TO_SUBSCRIBE_1 FOREIGN KEY (
	custpin
)
REFERENCES CUST (
	custpin
);

ALTER TABLE GOODLIST ADD CONSTRAINT FK_CUST_TO_GOODLIST_1 FOREIGN KEY (
	custpin
)
REFERENCES CUST (
	custpin
);

ALTER TABLE GOODLIST ADD CONSTRAINT FK_RECIPE_BASIC_TO_GOODLIST_1 FOREIGN KEY (
	recipepin
)
REFERENCES RECIPE_BASIC (
	recipepin
);

ALTER TABLE RECIPE_INGREDIENT ADD CONSTRAINT FK_RECIPE_BASIC_TO_INGREDIENT FOREIGN KEY (
	recipepin
)
REFERENCES RECIPE_BASIC (
	recipepin
);

ALTER TABLE RECIPE_STEP ADD CONSTRAINT FK_RECIPE_BASIC_TO_STEP FOREIGN KEY (
	recipepin
)
REFERENCES RECIPE_BASIC (
	recipepin
);

ALTER TABLE CLASS_JOIN_INFO ADD CONSTRAINT FK_CLASS_BASIC_TO_JOIN_INFO FOREIGN KEY (
	classpin
)
REFERENCES CLASS_BASIC (
	classpin
);

ALTER TABLE CLASS_JOIN_INFO ADD CONSTRAINT FK_CUST_TO_CLASS_JOIN_INFO_1 FOREIGN KEY (
	custpin
)
REFERENCES CUST (
	custpin
);

CREATE SEQUENCE CUST_SEQ
INCREMENT BY 1
START WITH 10001;

CREATE SEQUENCE RECIPE_BASIC_SEQ
INCREMENT BY 1
START WITH 20001;

CREATE SEQUENCE RECIPE_COMMENT_SEQ
INCREMENT BY 1
START WITH 30001;

CREATE SEQUENCE CLASS_BASIC_SEQ
INCREMENT BY 1
START WITH 40001;

CREATE SEQUENCE CLASS_COMMENT_SEQ
INCREMENT BY 1
START WITH 50001;

CREATE SEQUENCE PAYMENT_SEQ
INCREMENT BY 1
START WITH 60001;

CREATE SEQUENCE ADMIN_SEQ
INCREMENT BY 1
START WITH 70001;

CREATE SEQUENCE CONTACT_SEQ
INCREMENT BY 1
START WITH 80001;

CREATE SEQUENCE NOTICE_SEQ
INCREMENT BY 1
START WITH 90001;

CREATE SEQUENCE BAN_TEXT_SEQ
INCREMENT BY 1
START WITH 1001;